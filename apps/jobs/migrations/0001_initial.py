# Generated by Django 4.2.23 on 2025-06-16 06:26

import uuid

import django.core.validators
import django.db.models.deletion
import pgvector.django.vector
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("interview_scheduled", "Interview Scheduled"),
                            ("interview_completed", "Interview Completed"),
                            ("offer_received", "Offer Received"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                            ("failed", "Failed to Submit"),
                        ],
                        default="pending",
                        max_length=30,
                    ),
                ),
                (
                    "application_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manual Application"),
                            ("auto", "Auto Application"),
                            ("bulk", "Bulk Application"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                (
                    "resume_used",
                    models.FileField(blank=True, upload_to="applications/resumes/"),
                ),
                ("cover_letter", models.TextField(blank=True)),
                (
                    "additional_documents",
                    models.JSONField(
                        default=list, help_text="Additional document URLs"
                    ),
                ),
                ("application_url", models.URLField(blank=True)),
                (
                    "external_application_id",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "match_score",
                    models.FloatField(
                        blank=True,
                        help_text="AI-calculated job match score (0-1)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("auto_applied", models.BooleanField(default=False)),
                ("ai_generated_cover_letter", models.BooleanField(default=False)),
                ("last_contact_date", models.DateTimeField(blank=True, null=True)),
                ("interview_date", models.DateTimeField(blank=True, null=True)),
                ("follow_up_date", models.DateTimeField(blank=True, null=True)),
                ("skyvern_task_id", models.CharField(blank=True, max_length=100)),
                (
                    "submission_logs",
                    models.JSONField(
                        default=list, help_text="Application submission logs"
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("feedback_received", models.TextField(blank=True)),
                ("applied_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Application",
                "verbose_name_plural": "Applications",
                "db_table": "applications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=200)),
                ("company", models.CharField(db_index=True, max_length=100)),
                ("description", models.TextField()),
                ("requirements", models.TextField(blank=True)),
                ("benefits", models.TextField(blank=True)),
                ("location", models.CharField(db_index=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=50)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("country", models.CharField(default="US", max_length=50)),
                ("is_remote", models.BooleanField(default=False)),
                (
                    "remote_type",
                    models.CharField(
                        choices=[
                            ("no", "No Remote"),
                            ("hybrid", "Hybrid"),
                            ("full", "Fully Remote"),
                        ],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("full_time", "Full Time"),
                            ("part_time", "Part Time"),
                            ("contract", "Contract"),
                            ("temporary", "Temporary"),
                            ("internship", "Internship"),
                            ("freelance", "Freelance"),
                        ],
                        default="full_time",
                        max_length=20,
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("entry", "Entry Level"),
                            ("mid", "Mid Level"),
                            ("senior", "Senior Level"),
                            ("lead", "Lead/Principal"),
                            ("executive", "Executive"),
                        ],
                        default="mid",
                        max_length=20,
                    ),
                ),
                ("salary_min", models.PositiveIntegerField(blank=True, null=True)),
                ("salary_max", models.PositiveIntegerField(blank=True, null=True)),
                ("salary_currency", models.CharField(default="USD", max_length=3)),
                (
                    "salary_period",
                    models.CharField(
                        choices=[
                            ("hourly", "Hourly"),
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                        ],
                        default="yearly",
                        max_length=10,
                    ),
                ),
                (
                    "skills_required",
                    models.JSONField(default=list, help_text="Required skills"),
                ),
                (
                    "skills_preferred",
                    models.JSONField(default=list, help_text="Preferred skills"),
                ),
                (
                    "technologies",
                    models.JSONField(default=list, help_text="Technologies used"),
                ),
                (
                    "external_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("external_source", models.CharField(blank=True, max_length=50)),
                ("external_url", models.URLField(blank=True)),
                ("company_logo_url", models.URLField(blank=True)),
                (
                    "job_embedding",
                    pgvector.django.vector.VectorField(
                        blank=True, dimensions=1536, null=True
                    ),
                ),
                ("processed_for_matching", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("closed", "Closed"),
                            ("filled", "Filled"),
                            ("paused", "Paused"),
                            ("draft", "Draft"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("posted_date", models.DateTimeField(blank=True, null=True)),
                ("application_deadline", models.DateTimeField(blank=True, null=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("application_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Job",
                "verbose_name_plural": "Jobs",
                "db_table": "jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("api", "API Integration"),
                            ("scraper", "Web Scraper"),
                            ("manual", "Manual Entry"),
                            ("import", "Data Import"),
                        ],
                        max_length=20,
                    ),
                ),
                ("base_url", models.URLField(blank=True)),
                ("api_endpoint", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "configuration",
                    models.JSONField(
                        default=dict, help_text="Source-specific configuration"
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=200)),
                ("api_secret", models.CharField(blank=True, max_length=200)),
                ("rate_limit_per_hour", models.PositiveIntegerField(default=1000)),
                ("rate_limit_per_day", models.PositiveIntegerField(default=10000)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("total_jobs_fetched", models.PositiveIntegerField(default=0)),
                ("successful_syncs", models.PositiveIntegerField(default=0)),
                ("failed_syncs", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Job Source",
                "verbose_name_plural": "Job Sources",
                "db_table": "job_sources",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SavedJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, help_text="User-defined category", max_length=50
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="User notes about this job"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_by",
                        to="jobs.job",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Saved Job",
                "verbose_name_plural": "Saved Jobs",
                "db_table": "saved_jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Alert name for user reference", max_length=100
                    ),
                ),
                (
                    "keywords",
                    models.JSONField(default=list, help_text="Keywords to search for"),
                ),
                ("location", models.CharField(blank=True, max_length=100)),
                (
                    "job_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full_time", "Full Time"),
                            ("part_time", "Part Time"),
                            ("contract", "Contract"),
                            ("temporary", "Temporary"),
                            ("internship", "Internship"),
                            ("freelance", "Freelance"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("entry", "Entry Level"),
                            ("mid", "Mid Level"),
                            ("senior", "Senior Level"),
                            ("lead", "Lead/Principal"),
                            ("executive", "Executive"),
                        ],
                        max_length=20,
                    ),
                ),
                ("remote_only", models.BooleanField(default=False)),
                ("min_salary", models.PositiveIntegerField(blank=True, null=True)),
                ("max_salary", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        default="daily",
                        max_length=20,
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("push_notifications", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Alert",
                "verbose_name_plural": "Job Alerts",
                "db_table": "job_alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["title", "company"], name="jobs_title_858361_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["location", "is_remote"], name="jobs_locatio_144e24_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["job_type", "experience_level"], name="jobs_job_typ_67bf86_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["status", "-created_at"], name="jobs_status_70b954_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["external_source", "external_id"],
                name="jobs_externa_0ef48a_idx",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="job",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to="jobs.job",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="savedjob",
            index=models.Index(
                fields=["user", "-created_at"], name="saved_jobs_user_id_08012b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="savedjob",
            unique_together={("user", "job")},
        ),
        migrations.AddIndex(
            model_name="jobalert",
            index=models.Index(
                fields=["user", "is_active"], name="job_alerts_user_id_904ac0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="jobalert",
            index=models.Index(
                fields=["frequency", "last_run"], name="job_alerts_frequen_53b5ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["user", "status"], name="application_user_id_4cfcce_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["job", "status"], name="application_job_id_606b4d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["application_type", "-created_at"],
                name="application_applica_815fe0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["auto_applied", "match_score"],
                name="application_auto_ap_11621e_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="application",
            unique_together={("user", "job")},
        ),
    ]
